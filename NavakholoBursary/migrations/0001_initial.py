# Generated by Django 5.0.7 on 2024-07-31 11:22

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='InstitutionalInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution_category', models.CharField(max_length=30)),
                ('institution_name', models.CharField(max_length=50)),
                ('admission_no', models.CharField(max_length=20)),
                ('course', models.CharField(max_length=50)),
                ('mode_of_study', models.CharField(max_length=30)),
                ('year_of_study', models.PositiveIntegerField()),
                ('course_duration', models.PositiveIntegerField()),
                ('year_of_completion', models.DateField()),
                ('filled_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(max_length=10)),
                ('date_of_birth', models.DateField()),
                ('id_number', models.PositiveIntegerField()),
                ('phone_number', models.PositiveIntegerField()),
                ('ward', models.CharField(max_length=30)),
                ('village', models.CharField(max_length=30)),
                ('filled_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Guardian',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guardian_firstname', models.CharField(max_length=50)),
                ('guardian_lastname', models.CharField(max_length=50)),
                ('guardian_id_no', models.CharField(max_length=50)),
                ('guardian_phone_number', models.CharField(max_length=50)),
                ('guardian_occupation', models.CharField(max_length=50)),
                ('guardian_employer', models.CharField(max_length=50)),
                ('guardian_annual_income', models.CharField(max_length=50)),
                ('filled_date', models.DateTimeField(auto_now_add=True)),
                ('applicantID', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='NavakholoBursary.institutionalinformation')),
            ],
        ),
        migrations.CreateModel(
            name='Father',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('father_firstname', models.CharField(max_length=50)),
                ('father_lastname', models.CharField(max_length=50)),
                ('father_id_no', models.CharField(max_length=50)),
                ('father_phone_number', models.CharField(max_length=50)),
                ('father_occupation', models.CharField(max_length=50)),
                ('father_employer', models.CharField(max_length=50)),
                ('father_annual_income', models.CharField(max_length=50)),
                ('filled_date', models.DateTimeField(auto_now_add=True)),
                ('applicantId', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='NavakholoBursary.institutionalinformation')),
            ],
        ),
        migrations.CreateModel(
            name='BotheParent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('father_firstname', models.CharField(max_length=50)),
                ('father_lastname', models.CharField(max_length=50)),
                ('father_id_no', models.CharField(max_length=50)),
                ('father_phone_number', models.CharField(max_length=50)),
                ('father_occupation', models.CharField(max_length=50)),
                ('father_employer', models.CharField(max_length=50)),
                ('father_annual_income', models.CharField(max_length=50)),
                ('mother_firstname', models.CharField(max_length=50)),
                ('mother_firstname_lastname', models.CharField(max_length=50)),
                ('mother_id_no', models.CharField(max_length=50)),
                ('mother_phone_number', models.CharField(max_length=50)),
                ('mother_occupation', models.CharField(max_length=50)),
                ('mother_employer', models.CharField(max_length=50)),
                ('mother_annual_income', models.CharField(max_length=50)),
                ('filled_date', models.DateTimeField(auto_now_add=True)),
                ('applicant_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='NavakholoBursary.institutionalinformation')),
            ],
        ),
        migrations.CreateModel(
            name='Mother',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mother_firstname', models.CharField(max_length=50)),
                ('mother_firstname_lastname', models.CharField(max_length=50)),
                ('mother_id_no', models.CharField(max_length=50)),
                ('mother_phone_number', models.CharField(max_length=50)),
                ('mother_occupation', models.CharField(max_length=50)),
                ('mother_employer', models.CharField(max_length=50)),
                ('mother_annual_income', models.CharField(max_length=50)),
                ('filled_date', models.DateTimeField(auto_now_add=True)),
                ('applicantid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='NavakholoBursary.institutionalinformation')),
            ],
        ),
        migrations.AddField(
            model_name='institutionalinformation',
            name='application',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='NavakholoBursary.personalinformation'),
        ),
        migrations.CreateModel(
            name='AdditionalInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_siblings', models.CharField(max_length=200)),
                ('main_income_source', models.CharField(max_length=50)),
                ('reason_for_applying', models.CharField(max_length=100)),
                ('average_academic_performance', models.CharField(max_length=20)),
                ('disability', models.CharField(max_length=20)),
                ('disability_name', models.CharField(max_length=30)),
                ('filled_date', models.DateTimeField(auto_now_add=True)),
                ('studentsid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='NavakholoBursary.personalinformation')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_finance', models.BooleanField(default=False)),
                ('personal_information', models.BooleanField(default=False)),
                ('institution_information', models.BooleanField(default=False)),
                ('parent_information', models.BooleanField(default=False)),
                ('additional_information', models.BooleanField(default=False)),
                ('verification_stutus', models.BooleanField(default=False)),
                ('allocation_stutus', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='personalinformation',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
